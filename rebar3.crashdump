error: undef
[{rebar_erl_vsn_prv,init,
     [{state_t,"/mnt/c/Users/chris/Documents/GitHub/partisan",
          {dict,27,16,16,8,80,48,
              {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
              {{[],
                [[{deps,default},
                  {<<"uuid">>,{pkg,uuid_erl}},
                  <<"time_compat">>,<<"rand_compat">>,
                  {<<"acceptor_pool">>,"1.0.0-rc.0"},
                  {<<"types">>,"~> 0.1"},
                  {<<"lager">>,"~> 3.5"},
                  {<<"stacktrace_compat">>,"1.0.1"},
                  {<<"eredis">>,
                   {git,"git://github.com/wooga/eredis.git",{tag,"master"}}},
                  {<<"jsx">>,"2.8.0"},
                  {<<"hbbft">>,
                   {git,"git://github.com/helium/erlang-hbbft",
                       {branch,"master"}}},
                  {<<"acceptor_pool">>,
                   {pkg,<<"acceptor_pool">>,<<"1.0.0-rc.0">>,
                       <<"679D741DF87FC13599B1AEF2DF8F78F1F880449A6BEFAB7C44FB6FAE0E92A2DE">>},
                   0},
                  {<<"eredis">>,
                   {git,"git://github.com/wooga/eredis.git",
                       {ref,"6845ed50e13f456ecd115bcf9de666a58a1529dc"}},
                   0},
                  {<<"hbbft">>,
                   {git,"git://github.com/helium/erlang-hbbft",
                       {ref,"293ef05c0065520f4a011c84a249f311354757d3"}},
                   0},
                  {<<"jsx">>,
                   {pkg,<<"jsx">>,<<"2.8.0">>,
                       <<"749BEC6D205C694AE1786D62CEA6CC45A390437E24835FD16D12D74F07097727">>},
                   0},
                  {<<"lager">>,
                   {pkg,<<"lager">>,<<"3.6.10">>,
                       <<"6172B43AB720AC33914CCD0AEB21FDBDF88213847707D4B91E6AF57B2AE5C4D2">>},
                   0},
                  {<<"rand_compat">>,
                   {pkg,<<"rand_compat">>,<<"0.0.3">>,
                       <<"011646BC1F0B0C432FE101B816F25B9BBB74A085713CEE1DAFD2D62E9415EAD3">>},
                   0},
                  {<<"stacktrace_compat">>,
                   {pkg,<<"stacktrace_compat">>,<<"1.0.1">>,
                       <<"9769D80AE7B09E0BE405927561127D410FEC7A340E52E9286CE1F73DD1639095">>},
                   0},
                  {<<"time_compat">>,
                   {pkg,<<"time_compat">>,<<"0.0.1">>,
                       <<"23FE0AD1FDF3B5B88821B2D04B4B5E865BF587AE66056D671FE0F53514ED8139">>},
                   0},
                  {<<"types">>,
                   {pkg,<<"types">>,<<"0.1.8">>,
                       <<"5782B67231E8C174FE2835395E71E669FE0121076779D2A09F1C0D58EE0E2F13">>},
                   0},
                  {<<"uuid">>,
                   {pkg,<<"uuid_erl">>,<<"1.7.5">>,
                       <<"3862FF9A21C42566DFD0376B97512FA202922897129E09A05E2AFA0D9CAFD97A">>},
                   0}],
                 [{plugins,default},
                  rebar_erl_vsn,
                  {rebar3_proper,"0.10.1"},
                  {rebar3_run,
                      {git,"git://github.com/tsloughter/rebar3_run.git",
                          {branch,"master"}}}],
                 [{project_plugins,default}],
                 [{locks,default},
                  {<<"acceptor_pool">>,
                   {pkg,<<"acceptor_pool">>,<<"1.0.0-rc.0">>,
                       <<"679D741DF87FC13599B1AEF2DF8F78F1F880449A6BEFAB7C44FB6FAE0E92A2DE">>},
                   0},
                  {<<"erasure">>,
                   {git,"https://github.com/helium/erlang-erasure.git",
                       {ref,"ab0595a3f92d2ed244de83e74caf78e77aae2dc5"}},
                   1},
                  {<<"eredis">>,
                   {git,"git://github.com/wooga/eredis.git",
                       {ref,"6845ed50e13f456ecd115bcf9de666a58a1529dc"}},
                   0},
                  {<<"erlang_pbc">>,
                   {git,"https://github.com/helium/erlang_pbc.git",
                       {ref,"7d515e63b55b0ccd35fca05e882c4f7f52ab491e"}},
                   2},
                  {<<"erlang_tpke">>,
                   {git,"https://github.com/helium/erlang_tpke.git",
                       {ref,"53cde5a6addd99eebe29d4a56f3866d11e32bfed"}},
                   1},
                  {<<"goldrush">>,
                   {pkg,<<"goldrush">>,<<"0.1.9">>,
                       <<"F06E5D5F1277DA5C413E84D5A2924174182FB108DABB39D5EC548B27424CD106">>},
                   1},
                  {<<"hbbft">>,
                   {git,"git://github.com/helium/erlang-hbbft",
                       {ref,"293ef05c0065520f4a011c84a249f311354757d3"}},
                   0},
                  {<<"jsx">>,
                   {pkg,<<"jsx">>,<<"2.8.0">>,
                       <<"749BEC6D205C694AE1786D62CEA6CC45A390437E24835FD16D12D74F07097727">>},
                   0},
                  {<<"lager">>,
                   {pkg,<<"lager">>,<<"3.6.10">>,
                       <<"6172B43AB720AC33914CCD0AEB21FDBDF88213847707D4B91E6AF57B2AE5C4D2">>},
                   0},
                  {<<"merkerl">>,
                   {pkg,<<"merkerl">>,<<"1.0.1">>,
                       <<"FFFA7591CB3C62E837533A1C71B3C3795194FC3E09541E25369F1C87AF38EFE1">>},
                   1},
                  {<<"quickrand">>,
                   {pkg,<<"quickrand">>,<<"1.7.5">>,
                       <<"E3086A153EB13A057FC19192D05E2D4C6BB2BDBB55746A699BEAE9847AC17CA8">>},
                   1},
                  {<<"rand_compat">>,
                   {pkg,<<"rand_compat">>,<<"0.0.3">>,
                       <<"011646BC1F0B0C432FE101B816F25B9BBB74A085713CEE1DAFD2D62E9415EAD3">>},
                   0},
                  {<<"stacktrace_compat">>,
                   {pkg,<<"stacktrace_compat">>,<<"1.0.1">>,
                       <<"9769D80AE7B09E0BE405927561127D410FEC7A340E52E9286CE1F73DD1639095">>},
                   0},
                  {<<"time_compat">>,
                   {pkg,<<"time_compat">>,<<"0.0.1">>,
                       <<"23FE0AD1FDF3B5B88821B2D04B4B5E865BF587AE66056D671FE0F53514ED8139">>},
                   0},
                  {<<"types">>,
                   {pkg,<<"types">>,<<"0.1.8">>,
                       <<"5782B67231E8C174FE2835395E71E669FE0121076779D2A09F1C0D58EE0E2F13">>},
                   0},
                  {<<"uuid">>,
                   {pkg,<<"uuid_erl">>,<<"1.7.5">>,
                       <<"3862FF9A21C42566DFD0376B97512FA202922897129E09A05E2AFA0D9CAFD97A">>},
                   0}]],
                [[caller|command_line],
                 [base_dir,47,109,110,116,47,99,47,85,115,101,114,115,47,99,
                  104,114,105,115,47,68,111,99,117,109,101,110,116,115,47,71,
                  105,116,72,117,98,47,112,97,114,116,105,115,97,110,47,95,98,
                  117,105,108,100],
                 [deps_dir,112,108,117,103,105,110,115]],
                [[deps,
                  {uuid,{pkg,uuid_erl}},
                  time_compat,rand_compat,
                  {acceptor_pool,"1.0.0-rc.0"},
                  {types,"~> 0.1"},
                  {lager,"~> 3.5"},
                  {stacktrace_compat,"1.0.1"},
                  {eredis,
                      {git,"git://github.com/wooga/eredis.git",
                          {tag,"master"}}},
                  {jsx,"2.8.0"},
                  {hbbft,
                      {git,"git://github.com/helium/erlang-hbbft",
                          {branch,"master"}}}],
                 [dialyzer_base_plt_apps,kernel,stdlib,erts,sasl,eunit,
                  syntax_tools,compiler,crypto],
                 [xref_checks,undefined_function_calls],
                 [erl_opts,debug_info,
                  {parse_transform,stacktrace_transform},
                  {parse_transform,lager_transform},
                  {lager_truncation_size,8192}],
                 [eunit_opts,verbose,{report,{eunit_surefire,[{dir,"."}]}}],
                 [edoc_opts,{preprocess,true}],
                 [src_dirs,"src"],
                 [extra_src_dirs,"protocols"],
                 [provider_hooks,{pre,[{compile,erl_vsn}]}],
                 [plugins,rebar_erl_vsn,
                  {rebar3_proper,"0.10.1"},
                  {rebar3_run,
                      {git,"git://github.com/tsloughter/rebar3_run.git",
                          {branch,"master"}}}],
                 [profiles,
                  {test,
                      [{deps,[{proper,"1.2.0"},recon]},
                       {erl_opts,
                           [nowarn_export_all,nowarn_deprecated_function,
                            {d,'TEST'}]},
                       {extra_src_dirs,["test"]}]},
                  {lint,[{plugins,[rebar3_lint]}]},
                  {docs,[{deps,[edown]}]}],
                 [elvis,
                  #{dirs => ["src"],
                    filter => "*.erl",
                    rules =>
                        [{elvis_style,no_tabs},
                         {elvis_style,no_trailing_whitespace},
                         {elvis_style,macro_names,#{ignore => []}},
                         {elvis_style,operator_spaces,
                             #{rules =>
                                   [{right,","},{right,"++"},{left,"++"}]}},
                         {elvis_style,god_modules,#{ignore => [],limit => 25}},
                         {elvis_style,no_if_expression},
                         {elvis_style,used_ignored_variable},
                         {elvis_style,no_behavior_info},
                         {elvis_style,module_naming_convention,
                             #{ignore => [],
                               regex => "^[a-z]([a-z0-9]*_?)*(_SUITE)?$"}},
                         {elvis_style,function_naming_convention,
                             #{regex => "^([a-z][a-z0-9]*_?)*$"}},
                         {elvis_style,state_record_and_type},
                         {elvis_style,no_spec_with_records}]},
                  #{dirs => ["."],
                    filter => "Makefile",
                    rules =>
                        [{elvis_project,no_deps_master_erlang_mk,
                             #{ignore => []}},
                         {elvis_project,protocol_for_deps_erlang_mk,
                             #{ignore => []}}]},
                  #{dirs => ["."],
                    filter => "rebar.config",
                    rules =>
                        [{elvis_project,no_deps_master_rebar,#{ignore => []}},
                         {elvis_project,protocol_for_deps_rebar,
                             #{ignore => []}}]}],
                 [defines],
                 [overrides]],
                [[cover_enabled|true]],
                [[vsn_cache|
                  {dict,0,16,16,8,80,48,
                      {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                      {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}],
                 [force,48]],
                [],[],
                [[relx,
                  {release,{partisan,"4.0.0"},[eredis,partisan]},
                  {extended_start_script,true},
                  {dev_mode,true},
                  {include_erts,false},
                  {sys_config,"config/sys.config"},
                  {vm_args,"config/vm.args"},
                  {overlay,
                      [{mkdir,"log/sasl"},
                       {mkdir,"data/"},
                       {copy,"bin/env","bin"}]}]],
                [],[],
                [[task,104,101,108,112]],
                [],[],
                [[min_otp_version,49,57,46,48]],
                []}}},
          {dict,1,16,16,8,80,48,
              {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
              {{[],[],[],
                [[all_plugin_deps,
                  "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn/ebin"]],
                [],[],[],[],[],[],[],[],[],[],[],[]}}},
          {dict,19,16,16,8,80,48,
              {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
              {{[],
                [[{deps,default},
                  {<<"uuid">>,{pkg,uuid_erl}},
                  <<"time_compat">>,<<"rand_compat">>,
                  {<<"acceptor_pool">>,"1.0.0-rc.0"},
                  {<<"types">>,"~> 0.1"},
                  {<<"lager">>,"~> 3.5"},
                  {<<"stacktrace_compat">>,"1.0.1"},
                  {<<"eredis">>,
                   {git,"git://github.com/wooga/eredis.git",{tag,"master"}}},
                  {<<"jsx">>,"2.8.0"},
                  {<<"hbbft">>,
                   {git,"git://github.com/helium/erlang-hbbft",
                       {branch,"master"}}},
                  {<<"acceptor_pool">>,
                   {pkg,<<"acceptor_pool">>,<<"1.0.0-rc.0">>,
                       <<"679D741DF87FC13599B1AEF2DF8F78F1F880449A6BEFAB7C44FB6FAE0E92A2DE">>},
                   0},
                  {<<"eredis">>,
                   {git,"git://github.com/wooga/eredis.git",
                       {ref,"6845ed50e13f456ecd115bcf9de666a58a1529dc"}},
                   0},
                  {<<"hbbft">>,
                   {git,"git://github.com/helium/erlang-hbbft",
                       {ref,"293ef05c0065520f4a011c84a249f311354757d3"}},
                   0},
                  {<<"jsx">>,
                   {pkg,<<"jsx">>,<<"2.8.0">>,
                       <<"749BEC6D205C694AE1786D62CEA6CC45A390437E24835FD16D12D74F07097727">>},
                   0},
                  {<<"lager">>,
                   {pkg,<<"lager">>,<<"3.6.10">>,
                       <<"6172B43AB720AC33914CCD0AEB21FDBDF88213847707D4B91E6AF57B2AE5C4D2">>},
                   0},
                  {<<"rand_compat">>,
                   {pkg,<<"rand_compat">>,<<"0.0.3">>,
                       <<"011646BC1F0B0C432FE101B816F25B9BBB74A085713CEE1DAFD2D62E9415EAD3">>},
                   0},
                  {<<"stacktrace_compat">>,
                   {pkg,<<"stacktrace_compat">>,<<"1.0.1">>,
                       <<"9769D80AE7B09E0BE405927561127D410FEC7A340E52E9286CE1F73DD1639095">>},
                   0},
                  {<<"time_compat">>,
                   {pkg,<<"time_compat">>,<<"0.0.1">>,
                       <<"23FE0AD1FDF3B5B88821B2D04B4B5E865BF587AE66056D671FE0F53514ED8139">>},
                   0},
                  {<<"types">>,
                   {pkg,<<"types">>,<<"0.1.8">>,
                       <<"5782B67231E8C174FE2835395E71E669FE0121076779D2A09F1C0D58EE0E2F13">>},
                   0},
                  {<<"uuid">>,
                   {pkg,<<"uuid_erl">>,<<"1.7.5">>,
                       <<"3862FF9A21C42566DFD0376B97512FA202922897129E09A05E2AFA0D9CAFD97A">>},
                   0}],
                 [{plugins,default},
                  rebar_erl_vsn,
                  {rebar3_proper,"0.10.1"},
                  {rebar3_run,
                      {git,"git://github.com/tsloughter/rebar3_run.git",
                          {branch,"master"}}}],
                 [{project_plugins,default}],
                 [{locks,default},
                  {<<"acceptor_pool">>,
                   {pkg,<<"acceptor_pool">>,<<"1.0.0-rc.0">>,
                       <<"679D741DF87FC13599B1AEF2DF8F78F1F880449A6BEFAB7C44FB6FAE0E92A2DE">>},
                   0},
                  {<<"erasure">>,
                   {git,"https://github.com/helium/erlang-erasure.git",
                       {ref,"ab0595a3f92d2ed244de83e74caf78e77aae2dc5"}},
                   1},
                  {<<"eredis">>,
                   {git,"git://github.com/wooga/eredis.git",
                       {ref,"6845ed50e13f456ecd115bcf9de666a58a1529dc"}},
                   0},
                  {<<"erlang_pbc">>,
                   {git,"https://github.com/helium/erlang_pbc.git",
                       {ref,"7d515e63b55b0ccd35fca05e882c4f7f52ab491e"}},
                   2},
                  {<<"erlang_tpke">>,
                   {git,"https://github.com/helium/erlang_tpke.git",
                       {ref,"53cde5a6addd99eebe29d4a56f3866d11e32bfed"}},
                   1},
                  {<<"goldrush">>,
                   {pkg,<<"goldrush">>,<<"0.1.9">>,
                       <<"F06E5D5F1277DA5C413E84D5A2924174182FB108DABB39D5EC548B27424CD106">>},
                   1},
                  {<<"hbbft">>,
                   {git,"git://github.com/helium/erlang-hbbft",
                       {ref,"293ef05c0065520f4a011c84a249f311354757d3"}},
                   0},
                  {<<"jsx">>,
                   {pkg,<<"jsx">>,<<"2.8.0">>,
                       <<"749BEC6D205C694AE1786D62CEA6CC45A390437E24835FD16D12D74F07097727">>},
                   0},
                  {<<"lager">>,
                   {pkg,<<"lager">>,<<"3.6.10">>,
                       <<"6172B43AB720AC33914CCD0AEB21FDBDF88213847707D4B91E6AF57B2AE5C4D2">>},
                   0},
                  {<<"merkerl">>,
                   {pkg,<<"merkerl">>,<<"1.0.1">>,
                       <<"FFFA7591CB3C62E837533A1C71B3C3795194FC3E09541E25369F1C87AF38EFE1">>},
                   1},
                  {<<"quickrand">>,
                   {pkg,<<"quickrand">>,<<"1.7.5">>,
                       <<"E3086A153EB13A057FC19192D05E2D4C6BB2BDBB55746A699BEAE9847AC17CA8">>},
                   1},
                  {<<"rand_compat">>,
                   {pkg,<<"rand_compat">>,<<"0.0.3">>,
                       <<"011646BC1F0B0C432FE101B816F25B9BBB74A085713CEE1DAFD2D62E9415EAD3">>},
                   0},
                  {<<"stacktrace_compat">>,
                   {pkg,<<"stacktrace_compat">>,<<"1.0.1">>,
                       <<"9769D80AE7B09E0BE405927561127D410FEC7A340E52E9286CE1F73DD1639095">>},
                   0},
                  {<<"time_compat">>,
                   {pkg,<<"time_compat">>,<<"0.0.1">>,
                       <<"23FE0AD1FDF3B5B88821B2D04B4B5E865BF587AE66056D671FE0F53514ED8139">>},
                   0},
                  {<<"types">>,
                   {pkg,<<"types">>,<<"0.1.8">>,
                       <<"5782B67231E8C174FE2835395E71E669FE0121076779D2A09F1C0D58EE0E2F13">>},
                   0},
                  {<<"uuid">>,
                   {pkg,<<"uuid_erl">>,<<"1.7.5">>,
                       <<"3862FF9A21C42566DFD0376B97512FA202922897129E09A05E2AFA0D9CAFD97A">>},
                   0}]],
                [],
                [[deps,
                  {uuid,{pkg,uuid_erl}},
                  time_compat,rand_compat,
                  {acceptor_pool,"1.0.0-rc.0"},
                  {types,"~> 0.1"},
                  {lager,"~> 3.5"},
                  {stacktrace_compat,"1.0.1"},
                  {eredis,
                      {git,"git://github.com/wooga/eredis.git",
                          {tag,"master"}}},
                  {jsx,"2.8.0"},
                  {hbbft,
                      {git,"git://github.com/helium/erlang-hbbft",
                          {branch,"master"}}}],
                 [dialyzer_base_plt_apps,kernel,stdlib,erts,sasl,eunit,
                  syntax_tools,compiler,crypto],
                 [xref_checks,undefined_function_calls],
                 [erl_opts,debug_info,
                  {parse_transform,stacktrace_transform},
                  {parse_transform,lager_transform},
                  {lager_truncation_size,8192}],
                 [eunit_opts,verbose,{report,{eunit_surefire,[{dir,"."}]}}],
                 [edoc_opts,{preprocess,true}],
                 [src_dirs,"src"],
                 [extra_src_dirs,"protocols"],
                 [provider_hooks,{pre,[{compile,erl_vsn}]}],
                 [plugins,rebar_erl_vsn,
                  {rebar3_proper,"0.10.1"},
                  {rebar3_run,
                      {git,"git://github.com/tsloughter/rebar3_run.git",
                          {branch,"master"}}}],
                 [profiles,
                  {test,
                      [{deps,[{proper,"1.2.0"},recon]},
                       {erl_opts,
                           [nowarn_export_all,nowarn_deprecated_function]}]},
                  {lint,[{plugins,[rebar3_lint]}]},
                  {docs,[{deps,[edown]}]}],
                 [elvis,
                  #{dirs => ["src"],
                    filter => "*.erl",
                    rules =>
                        [{elvis_style,no_tabs},
                         {elvis_style,no_trailing_whitespace},
                         {elvis_style,macro_names,#{ignore => []}},
                         {elvis_style,operator_spaces,
                             #{rules =>
                                   [{right,","},{right,"++"},{left,"++"}]}},
                         {elvis_style,god_modules,#{ignore => [],limit => 25}},
                         {elvis_style,no_if_expression},
                         {elvis_style,used_ignored_variable},
                         {elvis_style,no_behavior_info},
                         {elvis_style,module_naming_convention,
                             #{ignore => [],
                               regex => "^[a-z]([a-z0-9]*_?)*(_SUITE)?$"}},
                         {elvis_style,function_naming_convention,
                             #{regex => "^([a-z][a-z0-9]*_?)*$"}},
                         {elvis_style,state_record_and_type},
                         {elvis_style,no_spec_with_records}]},
                  #{dirs => ["."],
                    filter => "Makefile",
                    rules =>
                        [{elvis_project,no_deps_master_erlang_mk,
                             #{ignore => []}},
                         {elvis_project,protocol_for_deps_erlang_mk,
                             #{ignore => []}}]},
                  #{dirs => ["."],
                    filter => "rebar.config",
                    rules =>
                        [{elvis_project,no_deps_master_rebar,#{ignore => []}},
                         {elvis_project,protocol_for_deps_rebar,
                             #{ignore => []}}]}]],
                [[cover_enabled|true]],
                [],[],[],
                [[relx,
                  {release,{partisan,"4.0.0"},[eredis,partisan]},
                  {extended_start_script,true},
                  {dev_mode,true},
                  {include_erts,false},
                  {sys_config,"config/sys.config"},
                  {vm_args,"config/vm.args"},
                  {overlay,
                      [{mkdir,"log/sasl"},
                       {mkdir,"data/"},
                       {copy,"bin/env","bin"}]}]],
                [],[],[],[],[],
                [[min_otp_version,49,57,46,48]],
                []}}},
          "/mnt/c/Users/chris/Documents/GitHub/partisan/rebar3",
          [{app_info_t,<<"rebar_erl_vsn">>,
               "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn/src/rebar_erl_vsn.app.src",
               undefined,
               "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn/ebin/rebar_erl_vsn.app",
               <<"0.2.2">>,root,
               [{description,"defines for erlang versions"},
                {vsn,"0.2.2"},
                {registered,[]},
                {applications,[kernel,stdlib]},
                {env,[]},
                {modules,[rebar_erl_vsn,rebar_erl_vsn_prv]},
                {maintainers,["Heinz N. Gies"]},
                {licenses,["MIT"]},
                {links,[]}],
               [kernel,stdlib],
               [],
               [default],
               {dict,6,16,16,8,80,48,
                   {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                   {{[],
                     [[{locks,default}],[{deps,default}],[{plugins,default}]],
                     [],
                     [[erl_opts,debug_info],[deps],[overrides]],
                     [],[],[],[],[],[],[],[],[],[],[],[]}}},
               {dict,6,16,16,8,80,48,
                   {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                   {{[],
                     [[{locks,default}],[{deps,default}],[{plugins,default}]],
                     [],
                     [[erl_opts,debug_info],[deps],[overrides]],
                     [],[],[],[],[],[],[],[],[],[],[],[]}}},
               0,
               "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn",
               "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn",
               pkg,
               {pkg,<<"rebar_erl_vsn">>,<<"0.2.2">>,
                   <<"704A18AD24D73CF26BF9E7B836F963116428FCEA1A93CDDCE02AC77C25AC53D7">>},
               false,false,true}],
          [default],
          default,[],
          {[],[]},
          undefined,[],[],
          [{app_info_t,<<"rebar_erl_vsn">>,
               "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn/src/rebar_erl_vsn.app.src",
               undefined,
               "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn/ebin/rebar_erl_vsn.app",
               "0.2.2",root,
               [{description,"defines for erlang versions"},
                {vsn,"0.2.2"},
                {registered,[]},
                {applications,[kernel,stdlib]},
                {env,[]},
                {modules,[rebar_erl_vsn,rebar_erl_vsn_prv]},
                {maintainers,["Heinz N. Gies"]},
                {licenses,["MIT"]},
                {links,[]}],
               [kernel,stdlib],
               [],
               [default,prod],
               {dict,6,16,16,8,80,48,
                   {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                   {{[],
                     [[{locks,default}],[{deps,default}],[{plugins,default}]],
                     [],
                     [[erl_opts,debug_info],[deps],[overrides]],
                     [],[],[],[],[],[],[],[],[],[],[],[]}}},
               {dict,6,16,16,8,80,48,
                   {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                   {{[],
                     [[{locks,default}],[{deps,default}],[{plugins,default}]],
                     [],
                     [[erl_opts,debug_info],[deps],[overrides]],
                     [],[],[],[],[],[],[],[],[],[],[],[]}}},
               0,
               "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn",
               "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn",
               pkg,
               {pkg,<<"rebar_erl_vsn">>,<<"0.2.2">>,
                   <<"704A18AD24D73CF26BF9E7B836F963116428FCEA1A93CDDCE02AC77C25AC53D7">>},
               false,false,true}],
          [],
          [{git,rebar_git_resource},
           {pkg,rebar_pkg_resource},
           {hg,rebar_hg_resource}],
          [{provider,xref,rebar_prv_xref,
               {[],[]},
               true,
               [compile],
               ["Run cross reference analysis.","\n","\n",86,97,108,105,100,
                32,114,101,98,97,114,46,99,111,110,102,105,103,32,111,112,116,
                105,111,110,115,58,"\n",32,32,
                [123,["xref_warnings",44,"false"],125],
                "\n",32,32,
                [123,["xref_extra_paths",44,"[]"],125],
                "\n",32,32,
                [123,
                 ["xref_checks",44,
                  [91,
                   ["undefined_function_calls",44,"undefined_functions",44,
                    "locals_not_used",44,10,
                    [32,[32,["   ",32,32,32],"   ",32,32,32],32,32],
                    "exports_not_used",44,"deprecated_function_calls",44,10,
                    [32,[32,["   ",32,32,32],"   ",32,32,32],32,32],
                    "deprecated_functions"],
                   93]],
                 125],
                "\n",32,32,
                [123,
                 ["xref_queries",44,
                  [91,
                   [[123,
                     ["\"(xc - uc) || (xu - x - b - (\\\"mod\\\":\\\".*foo\\\"/\\\"4\\\"))\"",
                      44,10,
                      [32,32,[[32,"   ",32,32,32],32,"   ",32,32,32],32,32],
                      "[]"],
                     125]],
                   93]],
                 125],
                "\n"],
               "Run cross reference analysis.","rebar3 xref",[],
               [default],
               default},
           {provider,version,rebar_prv_version,
               {[],[]},
               true,[],"Print version for rebar and current Erlang.",
               "Print version for rebar and current Erlang.","rebar3 version",
               [],
               [default],
               default},
           {provider,upgrade,rebar_prv_upgrade,
               {[],[]},
               true,
               [lock],
               "Upgrade project dependecies. Mentioning no application will upgrade all dependencies. To upgrade specific dependencies, their names can be listed in the command.",
               "Upgrade dependencies.","rebar3 upgrade [cowboy[,ranch]]",
               [{package,undefined,undefined,string,
                    "List of packages to upgrade. If not specified, all dependencies are upgraded."}],
               [default],
               default},
           {provider,update,rebar_prv_update,
               {[],[]},
               true,[],"Update package index.","Update package index.",
               "rebar3 update",[],
               [default],
               default},
           {provider,unlock,rebar_prv_unlock,
               {[],[]},
               true,[],
               "Unlock project dependencies. Mentioning no application will unlock all dependencies. To unlock specific dependencies, their name can be listed in the command.",
               "Unlock dependencies.",[],
               [{package,undefined,undefined,string,
                    "List of packages to unlock. If not specified, all dependencies are unlocked."}],
               [default],
               default},
           {provider,tar,rebar_prv_tar,
               {[],[]},
               true,
               [release],
               "Tar archive of release built of project.",
               "Tar archive of release built of project.","rebar3 tar",
               [{relname,110,"relname",string,
                    "Specify the name for the release that will be generated"},
                {relvsn,118,"relvsn",string,
                    "Specify the version for the release"},
                {goal,103,"goal",string,
                    "Specify a target constraint on the system. These are usually the OTP"},
                {upfrom,117,"upfrom",string,
                    "Only valid with relup target, specify the release to upgrade from"},
                {output_dir,111,"output-dir",string,
                    "The output directory for the release. This is `./` by default."},
                {help,104,"help",undefined,"Print usage"},
                {lib_dir,108,"lib-dir",string,
                    "Additional dir that should be searched for OTP Apps"},
                {path,112,"path",string,
                    "Additional dir to add to the code path"},
                {default_libs,undefined,"default-libs",boolean,
                    "Whether to use the default system added lib dirs (means you must add them all manually). Default is true"},
                {log_level,86,"verbose",
                    {integer,2},
                    "Verbosity level, maybe between 0 and 3"},
                {dev_mode,100,"dev-mode",boolean,
                    "Symlink the applications and configuration into the release instead of copying"},
                {include_erts,105,"include-erts",string,
                    "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
                {override,97,"override",string,
                    "Provide an app name and a directory to override in the form <appname>:<app directory>"},
                {config,99,"config",{string,[]},"The path to a config file"},
                {overlay_vars,undefined,"overlay_vars",string,
                    "Path to a file of overlay variables"},
                {vm_args,undefined,"vm_args",string,
                    "Path to a file to use for vm.args"},
                {sys_config,undefined,"sys_config",string,
                    "Path to a file to use for sys.config"},
                {system_libs,undefined,"system_libs",string,
                    "Path to dir of Erlang system libs"},
                {version,undefined,"version",undefined,"Print relx version"},
                {root_dir,114,"root",string,"The project root directory"}],
               [default],
               default},
           {provider,state,rebar_prv_state,
               {[],[]},
               false,[],"Display rebar configuration for debugging purpose",
               "Print current configuration state","rebar3 state",[],
               [default],
               default},
           {provider,shell,rebar_prv_shell,
               {[],[]},
               true,
               [compile],
               "Start a shell with project and deps preloaded similar to~n'erl -pa ebin -pa deps/*/ebin'.~n",
               "Run shell with project apps and deps in path.","rebar3 shell",
               [{config,undefined,"config",string,
                    "Path to the config file to use. Defaults to {shell, [{config, File}]} and then the relx sys.config file if not specified."},
                {name,undefined,"name",atom,"Gives a long name to the node."},
                {sname,undefined,"sname",atom,
                    "Gives a short name to the node."},
                {setcookie,undefined,"setcookie",atom,
                    "Sets the cookie if the node is distributed."},
                {script_file,undefined,"script",string,
                    "Path to an escript file to run before starting the project apps. Defaults to rebar.config {shell, [{script_file, File}]} if not specified."},
                {apps,undefined,"apps",string,
                    "A list of apps to boot before starting the shell. (E.g. --apps app1,app2,app3) Defaults to rebar.config {shell, [{apps, Apps}]} or relx apps if not specified."}],
               [default],
               default},
           {provider,report,rebar_prv_report,
               {[],[]},
               true,[],
               "Provide a crash report to be sent to the rebar3 issues page.",
               "Provide a crash report to be sent to the rebar3 issues page.",
               "rebar3 report \"<task>\"",
               [{task,undefined,undefined,string,
                    "Task to print details for."}],
               [default],
               default},
           {provider,relup,rebar_prv_relup,
               {[],[]},
               true,
               [release],
               "Create relup of releases.","Create relup of releases.",
               "rebar3 relup",
               [{relname,110,"relname",string,
                    "Specify the name for the release that will be generated"},
                {relvsn,118,"relvsn",string,
                    "Specify the version for the release"},
                {goal,103,"goal",string,
                    "Specify a target constraint on the system. These are usually the OTP"},
                {upfrom,117,"upfrom",string,
                    "Only valid with relup target, specify the release to upgrade from"},
                {output_dir,111,"output-dir",string,
                    "The output directory for the release. This is `./` by default."},
                {help,104,"help",undefined,"Print usage"},
                {lib_dir,108,"lib-dir",string,
                    "Additional dir that should be searched for OTP Apps"},
                {path,112,"path",string,
                    "Additional dir to add to the code path"},
                {default_libs,undefined,"default-libs",boolean,
                    "Whether to use the default system added lib dirs (means you must add them all manually). Default is true"},
                {log_level,86,"verbose",
                    {integer,2},
                    "Verbosity level, maybe between 0 and 3"},
                {dev_mode,100,"dev-mode",boolean,
                    "Symlink the applications and configuration into the release instead of copying"},
                {include_erts,105,"include-erts",string,
                    "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
                {override,97,"override",string,
                    "Provide an app name and a directory to override in the form <appname>:<app directory>"},
                {config,99,"config",{string,[]},"The path to a config file"},
                {overlay_vars,undefined,"overlay_vars",string,
                    "Path to a file of overlay variables"},
                {vm_args,undefined,"vm_args",string,
                    "Path to a file to use for vm.args"},
                {sys_config,undefined,"sys_config",string,
                    "Path to a file to use for sys.config"},
                {system_libs,undefined,"system_libs",string,
                    "Path to dir of Erlang system libs"},
                {version,undefined,"version",undefined,"Print relx version"},
                {root_dir,114,"root",string,"The project root directory"}],
               [default],
               default},
           {provider,release,rebar_prv_release,
               {[],[]},
               true,
               [compile],
               "Build release of project.","Build release of project.",
               "rebar3 release",
               [{relname,110,"relname",string,
                    "Specify the name for the release that will be generated"},
                {relvsn,118,"relvsn",string,
                    "Specify the version for the release"},
                {goal,103,"goal",string,
                    "Specify a target constraint on the system. These are usually the OTP"},
                {upfrom,117,"upfrom",string,
                    "Only valid with relup target, specify the release to upgrade from"},
                {output_dir,111,"output-dir",string,
                    "The output directory for the release. This is `./` by default."},
                {help,104,"help",undefined,"Print usage"},
                {lib_dir,108,"lib-dir",string,
                    "Additional dir that should be searched for OTP Apps"},
                {path,112,"path",string,
                    "Additional dir to add to the code path"},
                {default_libs,undefined,"default-libs",boolean,
                    "Whether to use the default system added lib dirs (means you must add them all manually). Default is true"},
                {log_level,86,"verbose",
                    {integer,2},
                    "Verbosity level, maybe between 0 and 3"},
                {dev_mode,100,"dev-mode",boolean,
                    "Symlink the applications and configuration into the release instead of copying"},
                {include_erts,105,"include-erts",string,
                    "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
                {override,97,"override",string,
                    "Provide an app name and a directory to override in the form <appname>:<app directory>"},
                {config,99,"config",{string,[]},"The path to a config file"},
                {overlay_vars,undefined,"overlay_vars",string,
                    "Path to a file of overlay variables"},
                {vm_args,undefined,"vm_args",string,
                    "Path to a file to use for vm.args"},
                {sys_config,undefined,"sys_config",string,
                    "Path to a file to use for sys.config"},
                {system_libs,undefined,"system_libs",string,
                    "Path to dir of Erlang system libs"},
                {version,undefined,"version",undefined,"Print relx version"},
                {root_dir,114,"root",string,"The project root directory"}],
               [default],
               default},
           {provider,upgrade,rebar_prv_plugins_upgrade,
               {[],[]},
               true,[],"List or upgrade plugins","Upgrade plugins",
               "rebar3 plugins upgrade <plugin>",
               [{plugin,undefined,undefined,string,"Plugin to upgrade"}],
               [default],
               plugins},
           {provider,list,rebar_prv_plugins,
               {[],[]},
               true,[],"List local and global plugins for this project",
               "List local and global plugins for this project",
               "rebar3 plugins list",[],
               [default],
               plugins},
           {provider,path,rebar_prv_path,
               {[],[]},
               true,
               [app_discovery],
               "Print paths to build dirs in current profile.",
               "Print paths to build dirs in current profile.","rebar3 path",
               [{app,undefined,"app",string,
                    "Comma seperated list of applications to return paths for."},
                {base,undefined,"base",boolean,
                    "Return the `base' path of the current profile."},
                {bin,undefined,"bin",boolean,
                    "Return the `bin' path of the current profile."},
                {ebin,undefined,"ebin",boolean,
                    "Return all `ebin' paths of the current profile's applications."},
                {lib,undefined,"lib",boolean,
                    "Return the `lib' path of the current profile."},
                {priv,undefined,"priv",boolean,
                    "Return the `priv' path of the current profile's applications."},
                {separator,115,"separator",string,
                    "In case of multiple return paths, the separator character to use to join them."},
                {src,undefined,"src",boolean,
                    "Return the `src' path of the current profile's applications."},
                {rel,undefined,"rel",boolean,
                    "Return the `rel' path of the current profile."}],
               [default],
               default},
           {provider,pkgs,rebar_prv_packages,
               {[],[]},
               true,[],
               ["List available packages",46,"\n"],
               "List available packages.","rebar3 pkgs",[],
               [default],
               default},
           {provider,new,rebar_prv_new,
               {[],[]},
               true,[],
               [67,114,101,97,116,101,32,114,101,98,97,114,51,32,112,114,111,
                106,101,99,116,32,98,97,115,101,100,32,111,110,32,116,101,109,
                112,108,97,116,101,32,97,110,100,32,118,97,114,115,46,"\n",
                "\n",86,97,108,105,100,32,99,111,109,109,97,110,100,32,108,
                105,110,101,32,111,112,116,105,111,110,115,58,"\n",32,32,60,
                116,101,109,112,108,97,116,101,62,32,91,118,97,114,61,102,111,
                111,44,46,46,46,93,"\n"],
               "Create new project from templates.","rebar3 new <template>",
               [{force,102,"force",undefined,"overwrite existing files"}],
               [default],
               default},
           {provider,lock,rebar_prv_lock,
               {[],[]},
               false,
               [install_deps],
               "Locks dependencies","Locks dependencies.",[],[],
               [default],
               default},
           {provider,upgrade,rebar_prv_local_upgrade,
               {[],[]},
               true,[],[],"Download latest rebar3 escript and extract.",
               "rebar3 unstable upgrade",[],
               [default],
               local},
           {provider,install,rebar_prv_local_install,
               {[],[]},
               true,[],[],
               "Extract libs from rebar3 escript along with a run script.",
               "rebar3 unstable install",[],
               [default],
               local},
           {provider,install_deps,rebar_prv_install_deps,
               {[],[]},
               false,
               [app_discovery],
               [],[],undefined,[],
               [default],
               default},
           {provider,help,rebar_prv_help,
               {[],[]},
               true,[],
               "Display a list of tasks or help for a given task or subtask.",
               "Display a list of tasks or help for a given task or subtask.",
               "rebar3 help <task>",
               [{help_task,undefined,undefined,string,
                    "Task to print help for."}],
               [default],
               default},
           {provider,'get-deps',rebar_prv_get_deps,
               {[],[]},
               true,
               [lock],
               "Fetch project dependencies.","Fetch dependencies.",
               "rebar3 get-deps",[],[],default},
           {provider,eunit,rebar_prv_eunit,
               {[],[]},
               true,
               [lock],
               "Run EUnit Tests.","Run EUnit Tests.","rebar3 eunit",
               [{app,undefined,"app",string,
                    "Comma separated list of application test suites to run. Equivalent to `[{application, App}]`."},
                {application,undefined,"application",string,
                    "Comma separated list of application test suites to run. Equivalent to `[{application, App}]`."},
                {cover,99,"cover",boolean,
                    "Generate cover data. Defaults to false."},
                {dir,100,"dir",string,
                    "Comma separated list of dirs to load tests from. Equivalent to `[{dir, Dir}]`."},
                {file,102,"file",string,
                    "Comma separated list of files to load tests from. Equivalent to `[{file, File}]`."},
                {module,109,"module",string,
                    "Comma separated list of modules to load tests from. Equivalent to `[{module, Module}]`."},
                {suite,115,"suite",string,
                    "Comma separated list of modules to load tests from. Equivalent to `[{module, Module}]`."},
                {verbose,118,"verbose",boolean,
                    "Verbose output. Defaults to false."},
                {name,undefined,"name",atom,"Gives a long name to the node"},
                {sname,undefined,"sname",atom,
                    "Gives a short name to the node"},
                {setcookie,undefined,"setcookie",atom,
                    "Sets the cookie if the node is distributed"}],
               [test],
               default},
           {provider,escriptize,rebar_prv_escriptize,
               {[],[]},
               true,
               [compile],
               "Generate an escript executable containing the project's and its dependencies' BEAM files.",
               "Generate escript archive.","rebar3 escriptize",[],
               [default],
               default},
           {provider,edoc,rebar_prv_edoc,
               {[],[]},
               true,
               [compile],
               "Generate documentation using edoc.",
               "Generate documentation using edoc.","rebar3 edoc",[],
               [docs],
               default},
           {provider,do,rebar_prv_do,
               {[],[]},
               true,[],
               "Higher order provider for running multiple tasks in a sequence.",
               "Higher order provider for running multiple tasks in a sequence.",
               "rebar3 do <task1>, <task2>, ...",[],
               [default],
               default},
           {provider,dialyzer,rebar_prv_dialyzer,
               {[],[]},
               true,
               [compile],
               "Run the Dialyzer analyzer on the project.\n\nThis command will build, and keep up-to-date, a suitable PLT and will use it to carry out success typing analysis on the current project.\n\nThe following (optional) configurations can be added to a `proplist` of options `dialyzer` in rebar.config:\n`warnings` - a list of dialyzer warnings\n`get_warnings` - display warnings when altering a PLT file (boolean)\n`plt_apps` - the strategy for determining the applications which included in the PLT file, `top_level_deps` to include just the direct dependencies or `all_deps` to include all nested dependencies*\n`plt_extra_apps` - a list of extra applications to include in the PLT file\n`plt_extra_mods` - a list of extra modules to includes in the PLT file\n`plt_location` - the location of the PLT file, `local` to store in the profile's base directory (default) or a custom directory.\n`plt_prefix` - the prefix to the PLT file, defaults to \"rebar3\"**\n`base_plt_apps` - a list of applications to include in the base PLT file***\n`base_plt_mods` - a list of modules to include in the base PLT file***\n`base_plt_location` - the location of base PLT file, `global` to store in $HOME/.cache/rebar3 (default) or  a custom directory***\n`base_plt_prefix` - the prefix to the base PLT file, defaults to \"rebar3\"** ***\n`exclude_apps` - a list of applications to exclude from PLT files and success typing analysis, `plt_extra_mods` and `base_plt_mods` can add modules from excluded applications\n`exclude_mods` - a list of modules to exclude from PLT files and success typing analysis\n\nFor example, to warn on unmatched returns: \n{dialyzer, [{warnings, [unmatched_returns]}]}.\n\n*The direct dependent applications are listed in `applications` and `included_applications` of their .app files.\n**PLT files are named \"<prefix>_<otp_release>_plt\".\n***The base PLT is a PLT containing the core applications often required for a project's PLT. One base PLT is created per OTP version and stored in `base_plt_location`. A base PLT is used to build project PLTs.\n",
               "Run the Dialyzer analyzer on the project.","rebar3 dialyzer",
               [{update_plt,117,"update-plt",boolean,
                    "Enable updating the PLT. Default: true"},
                {succ_typings,115,"succ-typings",boolean,
                    "Enable success typing analysis. Default: true"}],
               [default],
               default},
           {provider,tree,rebar_prv_deps_tree,
               {[],[]},
               true,
               [lock],
               [],"Print dependency tree.","rebar3 tree",
               [{verbose,118,"verbose",undefined,
                    "Print repo and branch/tag/ref for git and hg deps"}],
               [default],
               default},
           {provider,deps,rebar_prv_deps,
               {[],[]},
               true,
               [app_discovery],
               "List dependencies. Those not matching lock files are followed by an asterisk (*).",
               "List dependencies","rebar3 deps",[],
               [default],
               default},
           {provider,cover,rebar_prv_cover,
               {[],[]},
               true,
               [lock],
               "Perform coverage analysis.","Perform coverage analysis.",
               "rebar3 cover",
               [{reset,114,"reset",boolean,"Reset all coverdata."},
                {verbose,118,"verbose",boolean,"Print coverage analysis."}],
               [test],
               default},
           {provider,compile,rebar_prv_compile,
               {[],[]},
               true,
               [lock],
               "Compile apps .app.src and .erl files.",
               "Compile apps .app.src and .erl files.","rebar3 compile",[],
               [default],
               default},
           {provider,ct,rebar_prv_common_test,
               {[],[]},
               true,
               [lock],
               "Run Common Tests.","Run Common Tests.","rebar3 ct",
               [{dir,undefined,"dir",string,
                    "List of additional directories containing test suites"},
                {suite,undefined,"suite",string,"List of test suites to run"},
                {group,undefined,"group",string,"List of test groups to run"},
                {testcase,undefined,"case",string,"List of test cases to run"},
                {label,undefined,"label",string,"Test label"},
                {config,undefined,"config",string,"List of config files"},
                {spec,undefined,"spec",string,"List of test specifications"},
                {join_specs,undefined,"join_specs",boolean,
                    "Merge all test specifications and perform a single test run"},
                {allow_user_terms,undefined,"allow_user_terms",boolean,
                    "Allow user defined config values in config files"},
                {logdir,undefined,"logdir",string,"Log folder"},
                {logopts,undefined,"logopts",string,
                    "Options for common test logging"},
                {verbosity,undefined,"verbosity",integer,"Verbosity"},
                {cover,99,"cover",{boolean,false},"Generate cover data"},
                {repeat,undefined,"repeat",integer,
                    "How often to repeat tests"},
                {duration,undefined,"duration",string,
                    "Max runtime (format: HHMMSS)"},
                {until,undefined,"until",string,"Run until (format: HHMMSS)"},
                {force_stop,undefined,"force_stop",string,
                    "Force stop on test timeout (true | false | skip_rest)"},
                {basic_html,undefined,"basic_html",boolean,"Show basic HTML"},
                {stylesheet,undefined,"stylesheet",string,
                    "CSS stylesheet to apply to html output"},
                {decrypt_key,undefined,"decrypt_key",string,
                    "Path to key for decrypting config"},
                {decrypt_file,undefined,"decrypt_file",string,
                    "Path to file containing key for decrypting config"},
                {abort_if_missing_suites,undefined,"abort_if_missing_suites",
                    {boolean,true},
                    "Abort if suites are missing"},
                {multiply_timetraps,undefined,"multiply_timetraps",integer,[]},
                {scale_timetraps,undefined,"scale_timetraps",boolean,
                    "Scale timetraps"},
                {create_priv_dir,undefined,"create_priv_dir",string,
                    "Create priv dir (auto_per_run | auto_per_tc | manual_per_tc)"},
                {include,undefined,"include",string,
                    "Directories containing additional include files"},
                {readable,undefined,"readable",boolean,
                    "Shows test case names and only displays logs to shell on failures"},
                {verbose,118,"verbose",boolean,"Verbose output"},
                {name,undefined,"name",atom,"Gives a long name to the node"},
                {sname,undefined,"sname",atom,
                    "Gives a short name to the node"},
                {setcookie,undefined,"setcookie",atom,
                    "Sets the cookie if the node is distributed"},
                {sys_config,undefined,"sys_config",string,
                    "List of application config files"}],
               [test],
               default},
           {provider,clean,rebar_prv_clean,
               {[],[]},
               true,
               [app_discovery],
               "Remove compiled beam files from apps.",
               "Remove compiled beam files from apps.","rebar3 clean",
               [{all,97,"all",undefined,"Clean all apps include deps"},
                {profile,112,"profile",string,
                    "Clean under profile. Equivalent to `rebar3 as <profile> clean`"}],
               [default],
               default},
           {provider,compile,rebar_prv_bare_compile,
               {[],[]},
               false,
               [{default,app_discovery}],
               [],[],[],
               [{paths,112,"paths",string,
                    "Wildcard path of ebin directories to add to code path"}],
               [default],
               bare},
           {provider,as,rebar_prv_as,
               {[],[]},
               true,[],
               "Higher order provider for running multiple tasks in a sequence as a certain profiles.",
               "Higher order provider for running multiple tasks in a sequence as a certain profiles.",
               "rebar3 as <profile1>,<profile2>,... <task1>, <task2>, ...",
               [{profile,undefined,undefined,string,"Profiles to run as."}],
               [default],
               default},
           {provider,app_discovery,rebar_prv_app_discovery,
               {[],[]},
               false,[],[],[],[],[],
               [default],
               default}],
          false}],
     []},
 {rebar_erl_vsn,init,1,
     [{file,
          "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn/src/rebar_erl_vsn.erl"},
      {line,7}]},
 {rebar_state,'-create_logic_providers/2-fun-0-',2,
     [{file,
          "/home/tristan/Devel/rebar3/_build/default/lib/rebar/src/rebar_state.erl"},
      {line,409}]},
 {lists,foldl,3,[{file,"lists.erl"},{line,1263}]},
 {rebar_state,create_logic_providers,2,
     [{file,
          "/home/tristan/Devel/rebar3/_build/default/lib/rebar/src/rebar_state.erl"},
      {line,408}]},
 {rebar_plugins,'-handle_plugins/4-fun-0-',4,
     [{file,
          "/home/tristan/Devel/rebar3/_build/default/lib/rebar/src/rebar_plugins.erl"},
      {line,84}]},
 {lists,foldl,3,[{file,"lists.erl"},{line,1263}]},
 {rebar_plugins,handle_plugins,4,
     [{file,
          "/home/tristan/Devel/rebar3/_build/default/lib/rebar/src/rebar_plugins.erl"},
      {line,82}]}]

{state_t,"/mnt/c/Users/chris/Documents/GitHub/partisan",
    {dict,27,16,16,8,80,48,
        {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
        {{[],
          [[{deps,default},
            {<<"uuid">>,{pkg,uuid_erl}},
            <<"time_compat">>,<<"rand_compat">>,
            {<<"acceptor_pool">>,"1.0.0-rc.0"},
            {<<"types">>,"~> 0.1"},
            {<<"lager">>,"~> 3.5"},
            {<<"stacktrace_compat">>,"1.0.1"},
            {<<"eredis">>,
             {git,"git://github.com/wooga/eredis.git",{tag,"master"}}},
            {<<"jsx">>,"2.8.0"},
            {<<"hbbft">>,
             {git,"git://github.com/helium/erlang-hbbft",{branch,"master"}}},
            {<<"acceptor_pool">>,
             {pkg,<<"acceptor_pool">>,<<"1.0.0-rc.0">>,
                 <<"679D741DF87FC13599B1AEF2DF8F78F1F880449A6BEFAB7C44FB6FAE0E92A2DE">>},
             0},
            {<<"eredis">>,
             {git,"git://github.com/wooga/eredis.git",
                 {ref,"6845ed50e13f456ecd115bcf9de666a58a1529dc"}},
             0},
            {<<"hbbft">>,
             {git,"git://github.com/helium/erlang-hbbft",
                 {ref,"293ef05c0065520f4a011c84a249f311354757d3"}},
             0},
            {<<"jsx">>,
             {pkg,<<"jsx">>,<<"2.8.0">>,
                 <<"749BEC6D205C694AE1786D62CEA6CC45A390437E24835FD16D12D74F07097727">>},
             0},
            {<<"lager">>,
             {pkg,<<"lager">>,<<"3.6.10">>,
                 <<"6172B43AB720AC33914CCD0AEB21FDBDF88213847707D4B91E6AF57B2AE5C4D2">>},
             0},
            {<<"rand_compat">>,
             {pkg,<<"rand_compat">>,<<"0.0.3">>,
                 <<"011646BC1F0B0C432FE101B816F25B9BBB74A085713CEE1DAFD2D62E9415EAD3">>},
             0},
            {<<"stacktrace_compat">>,
             {pkg,<<"stacktrace_compat">>,<<"1.0.1">>,
                 <<"9769D80AE7B09E0BE405927561127D410FEC7A340E52E9286CE1F73DD1639095">>},
             0},
            {<<"time_compat">>,
             {pkg,<<"time_compat">>,<<"0.0.1">>,
                 <<"23FE0AD1FDF3B5B88821B2D04B4B5E865BF587AE66056D671FE0F53514ED8139">>},
             0},
            {<<"types">>,
             {pkg,<<"types">>,<<"0.1.8">>,
                 <<"5782B67231E8C174FE2835395E71E669FE0121076779D2A09F1C0D58EE0E2F13">>},
             0},
            {<<"uuid">>,
             {pkg,<<"uuid_erl">>,<<"1.7.5">>,
                 <<"3862FF9A21C42566DFD0376B97512FA202922897129E09A05E2AFA0D9CAFD97A">>},
             0}],
           [{plugins,default},
            rebar_erl_vsn,
            {rebar3_proper,"0.10.1"},
            {rebar3_run,
                {git,"git://github.com/tsloughter/rebar3_run.git",
                    {branch,"master"}}}],
           [{project_plugins,default}],
           [{locks,default},
            {<<"acceptor_pool">>,
             {pkg,<<"acceptor_pool">>,<<"1.0.0-rc.0">>,
                 <<"679D741DF87FC13599B1AEF2DF8F78F1F880449A6BEFAB7C44FB6FAE0E92A2DE">>},
             0},
            {<<"erasure">>,
             {git,"https://github.com/helium/erlang-erasure.git",
                 {ref,"ab0595a3f92d2ed244de83e74caf78e77aae2dc5"}},
             1},
            {<<"eredis">>,
             {git,"git://github.com/wooga/eredis.git",
                 {ref,"6845ed50e13f456ecd115bcf9de666a58a1529dc"}},
             0},
            {<<"erlang_pbc">>,
             {git,"https://github.com/helium/erlang_pbc.git",
                 {ref,"7d515e63b55b0ccd35fca05e882c4f7f52ab491e"}},
             2},
            {<<"erlang_tpke">>,
             {git,"https://github.com/helium/erlang_tpke.git",
                 {ref,"53cde5a6addd99eebe29d4a56f3866d11e32bfed"}},
             1},
            {<<"goldrush">>,
             {pkg,<<"goldrush">>,<<"0.1.9">>,
                 <<"F06E5D5F1277DA5C413E84D5A2924174182FB108DABB39D5EC548B27424CD106">>},
             1},
            {<<"hbbft">>,
             {git,"git://github.com/helium/erlang-hbbft",
                 {ref,"293ef05c0065520f4a011c84a249f311354757d3"}},
             0},
            {<<"jsx">>,
             {pkg,<<"jsx">>,<<"2.8.0">>,
                 <<"749BEC6D205C694AE1786D62CEA6CC45A390437E24835FD16D12D74F07097727">>},
             0},
            {<<"lager">>,
             {pkg,<<"lager">>,<<"3.6.10">>,
                 <<"6172B43AB720AC33914CCD0AEB21FDBDF88213847707D4B91E6AF57B2AE5C4D2">>},
             0},
            {<<"merkerl">>,
             {pkg,<<"merkerl">>,<<"1.0.1">>,
                 <<"FFFA7591CB3C62E837533A1C71B3C3795194FC3E09541E25369F1C87AF38EFE1">>},
             1},
            {<<"quickrand">>,
             {pkg,<<"quickrand">>,<<"1.7.5">>,
                 <<"E3086A153EB13A057FC19192D05E2D4C6BB2BDBB55746A699BEAE9847AC17CA8">>},
             1},
            {<<"rand_compat">>,
             {pkg,<<"rand_compat">>,<<"0.0.3">>,
                 <<"011646BC1F0B0C432FE101B816F25B9BBB74A085713CEE1DAFD2D62E9415EAD3">>},
             0},
            {<<"stacktrace_compat">>,
             {pkg,<<"stacktrace_compat">>,<<"1.0.1">>,
                 <<"9769D80AE7B09E0BE405927561127D410FEC7A340E52E9286CE1F73DD1639095">>},
             0},
            {<<"time_compat">>,
             {pkg,<<"time_compat">>,<<"0.0.1">>,
                 <<"23FE0AD1FDF3B5B88821B2D04B4B5E865BF587AE66056D671FE0F53514ED8139">>},
             0},
            {<<"types">>,
             {pkg,<<"types">>,<<"0.1.8">>,
                 <<"5782B67231E8C174FE2835395E71E669FE0121076779D2A09F1C0D58EE0E2F13">>},
             0},
            {<<"uuid">>,
             {pkg,<<"uuid_erl">>,<<"1.7.5">>,
                 <<"3862FF9A21C42566DFD0376B97512FA202922897129E09A05E2AFA0D9CAFD97A">>},
             0}]],
          [[caller|command_line],
           [base_dir,47,109,110,116,47,99,47,85,115,101,114,115,47,99,104,114,
            105,115,47,68,111,99,117,109,101,110,116,115,47,71,105,116,72,117,
            98,47,112,97,114,116,105,115,97,110,47,95,98,117,105,108,100],
           [deps_dir,112,108,117,103,105,110,115]],
          [[deps,
            {uuid,{pkg,uuid_erl}},
            time_compat,rand_compat,
            {acceptor_pool,"1.0.0-rc.0"},
            {types,"~> 0.1"},
            {lager,"~> 3.5"},
            {stacktrace_compat,"1.0.1"},
            {eredis,{git,"git://github.com/wooga/eredis.git",{tag,"master"}}},
            {jsx,"2.8.0"},
            {hbbft,
                {git,"git://github.com/helium/erlang-hbbft",
                    {branch,"master"}}}],
           [dialyzer_base_plt_apps,kernel,stdlib,erts,sasl,eunit,syntax_tools,
            compiler,crypto],
           [xref_checks,undefined_function_calls],
           [erl_opts,debug_info,
            {parse_transform,stacktrace_transform},
            {parse_transform,lager_transform},
            {lager_truncation_size,8192}],
           [eunit_opts,verbose,{report,{eunit_surefire,[{dir,"."}]}}],
           [edoc_opts,{preprocess,true}],
           [src_dirs,"src"],
           [extra_src_dirs,"protocols"],
           [provider_hooks,{pre,[{compile,erl_vsn}]}],
           [plugins,rebar_erl_vsn,
            {rebar3_proper,"0.10.1"},
            {rebar3_run,
                {git,"git://github.com/tsloughter/rebar3_run.git",
                    {branch,"master"}}}],
           [profiles,
            {test,
                [{deps,[{proper,"1.2.0"},recon]},
                 {erl_opts,
                     [nowarn_export_all,nowarn_deprecated_function,
                      {d,'TEST'}]},
                 {extra_src_dirs,["test"]}]},
            {lint,[{plugins,[rebar3_lint]}]},
            {docs,[{deps,[edown]}]}],
           [elvis,
            #{dirs => ["src"],
              filter => "*.erl",
              rules =>
                  [{elvis_style,no_tabs},
                   {elvis_style,no_trailing_whitespace},
                   {elvis_style,macro_names,#{ignore => []}},
                   {elvis_style,operator_spaces,
                       #{rules => [{right,","},{right,"++"},{left,"++"}]}},
                   {elvis_style,god_modules,#{ignore => [],limit => 25}},
                   {elvis_style,no_if_expression},
                   {elvis_style,used_ignored_variable},
                   {elvis_style,no_behavior_info},
                   {elvis_style,module_naming_convention,
                       #{ignore => [],
                         regex => "^[a-z]([a-z0-9]*_?)*(_SUITE)?$"}},
                   {elvis_style,function_naming_convention,
                       #{regex => "^([a-z][a-z0-9]*_?)*$"}},
                   {elvis_style,state_record_and_type},
                   {elvis_style,no_spec_with_records}]},
            #{dirs => ["."],
              filter => "Makefile",
              rules =>
                  [{elvis_project,no_deps_master_erlang_mk,#{ignore => []}},
                   {elvis_project,protocol_for_deps_erlang_mk,
                       #{ignore => []}}]},
            #{dirs => ["."],
              filter => "rebar.config",
              rules =>
                  [{elvis_project,no_deps_master_rebar,#{ignore => []}},
                   {elvis_project,protocol_for_deps_rebar,#{ignore => []}}]}],
           [defines],
           [overrides]],
          [[cover_enabled|true]],
          [[vsn_cache|
            {dict,0,16,16,8,80,48,
                {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}],
           [force,48]],
          [],[],
          [[relx,
            {release,{partisan,"4.0.0"},[eredis,partisan]},
            {extended_start_script,true},
            {dev_mode,true},
            {include_erts,false},
            {sys_config,"config/sys.config"},
            {vm_args,"config/vm.args"},
            {overlay,
                [{mkdir,"log/sasl"},{mkdir,"data/"},{copy,"bin/env","bin"}]}]],
          [],[],
          [[task,104,101,108,112]],
          [],[],
          [[min_otp_version,49,57,46,48]],
          []}}},
    {dict,1,16,16,8,80,48,
        {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
        {{[],[],[],
          [[all_plugin_deps,
            "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn/ebin"]],
          [],[],[],[],[],[],[],[],[],[],[],[]}}},
    {dict,19,16,16,8,80,48,
        {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
        {{[],
          [[{deps,default},
            {<<"uuid">>,{pkg,uuid_erl}},
            <<"time_compat">>,<<"rand_compat">>,
            {<<"acceptor_pool">>,"1.0.0-rc.0"},
            {<<"types">>,"~> 0.1"},
            {<<"lager">>,"~> 3.5"},
            {<<"stacktrace_compat">>,"1.0.1"},
            {<<"eredis">>,
             {git,"git://github.com/wooga/eredis.git",{tag,"master"}}},
            {<<"jsx">>,"2.8.0"},
            {<<"hbbft">>,
             {git,"git://github.com/helium/erlang-hbbft",{branch,"master"}}},
            {<<"acceptor_pool">>,
             {pkg,<<"acceptor_pool">>,<<"1.0.0-rc.0">>,
                 <<"679D741DF87FC13599B1AEF2DF8F78F1F880449A6BEFAB7C44FB6FAE0E92A2DE">>},
             0},
            {<<"eredis">>,
             {git,"git://github.com/wooga/eredis.git",
                 {ref,"6845ed50e13f456ecd115bcf9de666a58a1529dc"}},
             0},
            {<<"hbbft">>,
             {git,"git://github.com/helium/erlang-hbbft",
                 {ref,"293ef05c0065520f4a011c84a249f311354757d3"}},
             0},
            {<<"jsx">>,
             {pkg,<<"jsx">>,<<"2.8.0">>,
                 <<"749BEC6D205C694AE1786D62CEA6CC45A390437E24835FD16D12D74F07097727">>},
             0},
            {<<"lager">>,
             {pkg,<<"lager">>,<<"3.6.10">>,
                 <<"6172B43AB720AC33914CCD0AEB21FDBDF88213847707D4B91E6AF57B2AE5C4D2">>},
             0},
            {<<"rand_compat">>,
             {pkg,<<"rand_compat">>,<<"0.0.3">>,
                 <<"011646BC1F0B0C432FE101B816F25B9BBB74A085713CEE1DAFD2D62E9415EAD3">>},
             0},
            {<<"stacktrace_compat">>,
             {pkg,<<"stacktrace_compat">>,<<"1.0.1">>,
                 <<"9769D80AE7B09E0BE405927561127D410FEC7A340E52E9286CE1F73DD1639095">>},
             0},
            {<<"time_compat">>,
             {pkg,<<"time_compat">>,<<"0.0.1">>,
                 <<"23FE0AD1FDF3B5B88821B2D04B4B5E865BF587AE66056D671FE0F53514ED8139">>},
             0},
            {<<"types">>,
             {pkg,<<"types">>,<<"0.1.8">>,
                 <<"5782B67231E8C174FE2835395E71E669FE0121076779D2A09F1C0D58EE0E2F13">>},
             0},
            {<<"uuid">>,
             {pkg,<<"uuid_erl">>,<<"1.7.5">>,
                 <<"3862FF9A21C42566DFD0376B97512FA202922897129E09A05E2AFA0D9CAFD97A">>},
             0}],
           [{plugins,default},
            rebar_erl_vsn,
            {rebar3_proper,"0.10.1"},
            {rebar3_run,
                {git,"git://github.com/tsloughter/rebar3_run.git",
                    {branch,"master"}}}],
           [{project_plugins,default}],
           [{locks,default},
            {<<"acceptor_pool">>,
             {pkg,<<"acceptor_pool">>,<<"1.0.0-rc.0">>,
                 <<"679D741DF87FC13599B1AEF2DF8F78F1F880449A6BEFAB7C44FB6FAE0E92A2DE">>},
             0},
            {<<"erasure">>,
             {git,"https://github.com/helium/erlang-erasure.git",
                 {ref,"ab0595a3f92d2ed244de83e74caf78e77aae2dc5"}},
             1},
            {<<"eredis">>,
             {git,"git://github.com/wooga/eredis.git",
                 {ref,"6845ed50e13f456ecd115bcf9de666a58a1529dc"}},
             0},
            {<<"erlang_pbc">>,
             {git,"https://github.com/helium/erlang_pbc.git",
                 {ref,"7d515e63b55b0ccd35fca05e882c4f7f52ab491e"}},
             2},
            {<<"erlang_tpke">>,
             {git,"https://github.com/helium/erlang_tpke.git",
                 {ref,"53cde5a6addd99eebe29d4a56f3866d11e32bfed"}},
             1},
            {<<"goldrush">>,
             {pkg,<<"goldrush">>,<<"0.1.9">>,
                 <<"F06E5D5F1277DA5C413E84D5A2924174182FB108DABB39D5EC548B27424CD106">>},
             1},
            {<<"hbbft">>,
             {git,"git://github.com/helium/erlang-hbbft",
                 {ref,"293ef05c0065520f4a011c84a249f311354757d3"}},
             0},
            {<<"jsx">>,
             {pkg,<<"jsx">>,<<"2.8.0">>,
                 <<"749BEC6D205C694AE1786D62CEA6CC45A390437E24835FD16D12D74F07097727">>},
             0},
            {<<"lager">>,
             {pkg,<<"lager">>,<<"3.6.10">>,
                 <<"6172B43AB720AC33914CCD0AEB21FDBDF88213847707D4B91E6AF57B2AE5C4D2">>},
             0},
            {<<"merkerl">>,
             {pkg,<<"merkerl">>,<<"1.0.1">>,
                 <<"FFFA7591CB3C62E837533A1C71B3C3795194FC3E09541E25369F1C87AF38EFE1">>},
             1},
            {<<"quickrand">>,
             {pkg,<<"quickrand">>,<<"1.7.5">>,
                 <<"E3086A153EB13A057FC19192D05E2D4C6BB2BDBB55746A699BEAE9847AC17CA8">>},
             1},
            {<<"rand_compat">>,
             {pkg,<<"rand_compat">>,<<"0.0.3">>,
                 <<"011646BC1F0B0C432FE101B816F25B9BBB74A085713CEE1DAFD2D62E9415EAD3">>},
             0},
            {<<"stacktrace_compat">>,
             {pkg,<<"stacktrace_compat">>,<<"1.0.1">>,
                 <<"9769D80AE7B09E0BE405927561127D410FEC7A340E52E9286CE1F73DD1639095">>},
             0},
            {<<"time_compat">>,
             {pkg,<<"time_compat">>,<<"0.0.1">>,
                 <<"23FE0AD1FDF3B5B88821B2D04B4B5E865BF587AE66056D671FE0F53514ED8139">>},
             0},
            {<<"types">>,
             {pkg,<<"types">>,<<"0.1.8">>,
                 <<"5782B67231E8C174FE2835395E71E669FE0121076779D2A09F1C0D58EE0E2F13">>},
             0},
            {<<"uuid">>,
             {pkg,<<"uuid_erl">>,<<"1.7.5">>,
                 <<"3862FF9A21C42566DFD0376B97512FA202922897129E09A05E2AFA0D9CAFD97A">>},
             0}]],
          [],
          [[deps,
            {uuid,{pkg,uuid_erl}},
            time_compat,rand_compat,
            {acceptor_pool,"1.0.0-rc.0"},
            {types,"~> 0.1"},
            {lager,"~> 3.5"},
            {stacktrace_compat,"1.0.1"},
            {eredis,{git,"git://github.com/wooga/eredis.git",{tag,"master"}}},
            {jsx,"2.8.0"},
            {hbbft,
                {git,"git://github.com/helium/erlang-hbbft",
                    {branch,"master"}}}],
           [dialyzer_base_plt_apps,kernel,stdlib,erts,sasl,eunit,syntax_tools,
            compiler,crypto],
           [xref_checks,undefined_function_calls],
           [erl_opts,debug_info,
            {parse_transform,stacktrace_transform},
            {parse_transform,lager_transform},
            {lager_truncation_size,8192}],
           [eunit_opts,verbose,{report,{eunit_surefire,[{dir,"."}]}}],
           [edoc_opts,{preprocess,true}],
           [src_dirs,"src"],
           [extra_src_dirs,"protocols"],
           [provider_hooks,{pre,[{compile,erl_vsn}]}],
           [plugins,rebar_erl_vsn,
            {rebar3_proper,"0.10.1"},
            {rebar3_run,
                {git,"git://github.com/tsloughter/rebar3_run.git",
                    {branch,"master"}}}],
           [profiles,
            {test,
                [{deps,[{proper,"1.2.0"},recon]},
                 {erl_opts,[nowarn_export_all,nowarn_deprecated_function]}]},
            {lint,[{plugins,[rebar3_lint]}]},
            {docs,[{deps,[edown]}]}],
           [elvis,
            #{dirs => ["src"],
              filter => "*.erl",
              rules =>
                  [{elvis_style,no_tabs},
                   {elvis_style,no_trailing_whitespace},
                   {elvis_style,macro_names,#{ignore => []}},
                   {elvis_style,operator_spaces,
                       #{rules => [{right,","},{right,"++"},{left,"++"}]}},
                   {elvis_style,god_modules,#{ignore => [],limit => 25}},
                   {elvis_style,no_if_expression},
                   {elvis_style,used_ignored_variable},
                   {elvis_style,no_behavior_info},
                   {elvis_style,module_naming_convention,
                       #{ignore => [],
                         regex => "^[a-z]([a-z0-9]*_?)*(_SUITE)?$"}},
                   {elvis_style,function_naming_convention,
                       #{regex => "^([a-z][a-z0-9]*_?)*$"}},
                   {elvis_style,state_record_and_type},
                   {elvis_style,no_spec_with_records}]},
            #{dirs => ["."],
              filter => "Makefile",
              rules =>
                  [{elvis_project,no_deps_master_erlang_mk,#{ignore => []}},
                   {elvis_project,protocol_for_deps_erlang_mk,
                       #{ignore => []}}]},
            #{dirs => ["."],
              filter => "rebar.config",
              rules =>
                  [{elvis_project,no_deps_master_rebar,#{ignore => []}},
                   {elvis_project,protocol_for_deps_rebar,#{ignore => []}}]}]],
          [[cover_enabled|true]],
          [],[],[],
          [[relx,
            {release,{partisan,"4.0.0"},[eredis,partisan]},
            {extended_start_script,true},
            {dev_mode,true},
            {include_erts,false},
            {sys_config,"config/sys.config"},
            {vm_args,"config/vm.args"},
            {overlay,
                [{mkdir,"log/sasl"},{mkdir,"data/"},{copy,"bin/env","bin"}]}]],
          [],[],[],[],[],
          [[min_otp_version,49,57,46,48]],
          []}}},
    "/mnt/c/Users/chris/Documents/GitHub/partisan/rebar3",
    [{app_info_t,<<"rebar_erl_vsn">>,
         "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn/src/rebar_erl_vsn.app.src",
         undefined,
         "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn/ebin/rebar_erl_vsn.app",
         <<"0.2.2">>,root,
         [{description,"defines for erlang versions"},
          {vsn,"0.2.2"},
          {registered,[]},
          {applications,[kernel,stdlib]},
          {env,[]},
          {modules,[rebar_erl_vsn,rebar_erl_vsn_prv]},
          {maintainers,["Heinz N. Gies"]},
          {licenses,["MIT"]},
          {links,[]}],
         [kernel,stdlib],
         [],
         [default],
         {dict,6,16,16,8,80,48,
             {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
             {{[],
               [[{locks,default}],[{deps,default}],[{plugins,default}]],
               [],
               [[erl_opts,debug_info],[deps],[overrides]],
               [],[],[],[],[],[],[],[],[],[],[],[]}}},
         {dict,6,16,16,8,80,48,
             {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
             {{[],
               [[{locks,default}],[{deps,default}],[{plugins,default}]],
               [],
               [[erl_opts,debug_info],[deps],[overrides]],
               [],[],[],[],[],[],[],[],[],[],[],[]}}},
         0,
         "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn",
         "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn",
         pkg,
         {pkg,<<"rebar_erl_vsn">>,<<"0.2.2">>,
             <<"704A18AD24D73CF26BF9E7B836F963116428FCEA1A93CDDCE02AC77C25AC53D7">>},
         false,false,true}],
    [default],
    default,[],
    {[],[]},
    undefined,[],[],
    [{app_info_t,<<"rebar_erl_vsn">>,
         "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn/src/rebar_erl_vsn.app.src",
         undefined,
         "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn/ebin/rebar_erl_vsn.app",
         "0.2.2",root,
         [{description,"defines for erlang versions"},
          {vsn,"0.2.2"},
          {registered,[]},
          {applications,[kernel,stdlib]},
          {env,[]},
          {modules,[rebar_erl_vsn,rebar_erl_vsn_prv]},
          {maintainers,["Heinz N. Gies"]},
          {licenses,["MIT"]},
          {links,[]}],
         [kernel,stdlib],
         [],
         [default,prod],
         {dict,6,16,16,8,80,48,
             {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
             {{[],
               [[{locks,default}],[{deps,default}],[{plugins,default}]],
               [],
               [[erl_opts,debug_info],[deps],[overrides]],
               [],[],[],[],[],[],[],[],[],[],[],[]}}},
         {dict,6,16,16,8,80,48,
             {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
             {{[],
               [[{locks,default}],[{deps,default}],[{plugins,default}]],
               [],
               [[erl_opts,debug_info],[deps],[overrides]],
               [],[],[],[],[],[],[],[],[],[],[],[]}}},
         0,
         "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn",
         "/mnt/c/Users/chris/Documents/GitHub/partisan/_build/default/plugins/rebar_erl_vsn",
         pkg,
         {pkg,<<"rebar_erl_vsn">>,<<"0.2.2">>,
             <<"704A18AD24D73CF26BF9E7B836F963116428FCEA1A93CDDCE02AC77C25AC53D7">>},
         false,false,true}],
    [],
    [{git,rebar_git_resource},{pkg,rebar_pkg_resource},{hg,rebar_hg_resource}],
    [{provider,xref,rebar_prv_xref,
         {[],[]},
         true,
         [compile],
         ["Run cross reference analysis.","\n","\n",86,97,108,105,100,32,114,
          101,98,97,114,46,99,111,110,102,105,103,32,111,112,116,105,111,110,
          115,58,"\n",32,32,
          [123,["xref_warnings",44,"false"],125],
          "\n",32,32,
          [123,["xref_extra_paths",44,"[]"],125],
          "\n",32,32,
          [123,
           ["xref_checks",44,
            [91,
             ["undefined_function_calls",44,"undefined_functions",44,
              "locals_not_used",44,10,
              [32,[32,["   ",32,32,32],"   ",32,32,32],32,32],
              "exports_not_used",44,"deprecated_function_calls",44,10,
              [32,[32,["   ",32,32,32],"   ",32,32,32],32,32],
              "deprecated_functions"],
             93]],
           125],
          "\n",32,32,
          [123,
           ["xref_queries",44,
            [91,
             [[123,
               ["\"(xc - uc) || (xu - x - b - (\\\"mod\\\":\\\".*foo\\\"/\\\"4\\\"))\"",
                44,10,
                [32,32,[[32,"   ",32,32,32],32,"   ",32,32,32],32,32],
                "[]"],
               125]],
             93]],
           125],
          "\n"],
         "Run cross reference analysis.","rebar3 xref",[],
         [default],
         default},
     {provider,version,rebar_prv_version,
         {[],[]},
         true,[],"Print version for rebar and current Erlang.",
         "Print version for rebar and current Erlang.","rebar3 version",[],
         [default],
         default},
     {provider,upgrade,rebar_prv_upgrade,
         {[],[]},
         true,
         [lock],
         "Upgrade project dependecies. Mentioning no application will upgrade all dependencies. To upgrade specific dependencies, their names can be listed in the command.",
         "Upgrade dependencies.","rebar3 upgrade [cowboy[,ranch]]",
         [{package,undefined,undefined,string,
              "List of packages to upgrade. If not specified, all dependencies are upgraded."}],
         [default],
         default},
     {provider,update,rebar_prv_update,
         {[],[]},
         true,[],"Update package index.","Update package index.",
         "rebar3 update",[],
         [default],
         default},
     {provider,unlock,rebar_prv_unlock,
         {[],[]},
         true,[],
         "Unlock project dependencies. Mentioning no application will unlock all dependencies. To unlock specific dependencies, their name can be listed in the command.",
         "Unlock dependencies.",[],
         [{package,undefined,undefined,string,
              "List of packages to unlock. If not specified, all dependencies are unlocked."}],
         [default],
         default},
     {provider,tar,rebar_prv_tar,
         {[],[]},
         true,
         [release],
         "Tar archive of release built of project.",
         "Tar archive of release built of project.","rebar3 tar",
         [{relname,110,"relname",string,
              "Specify the name for the release that will be generated"},
          {relvsn,118,"relvsn",string,"Specify the version for the release"},
          {goal,103,"goal",string,
              "Specify a target constraint on the system. These are usually the OTP"},
          {upfrom,117,"upfrom",string,
              "Only valid with relup target, specify the release to upgrade from"},
          {output_dir,111,"output-dir",string,
              "The output directory for the release. This is `./` by default."},
          {help,104,"help",undefined,"Print usage"},
          {lib_dir,108,"lib-dir",string,
              "Additional dir that should be searched for OTP Apps"},
          {path,112,"path",string,"Additional dir to add to the code path"},
          {default_libs,undefined,"default-libs",boolean,
              "Whether to use the default system added lib dirs (means you must add them all manually). Default is true"},
          {log_level,86,"verbose",
              {integer,2},
              "Verbosity level, maybe between 0 and 3"},
          {dev_mode,100,"dev-mode",boolean,
              "Symlink the applications and configuration into the release instead of copying"},
          {include_erts,105,"include-erts",string,
              "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
          {override,97,"override",string,
              "Provide an app name and a directory to override in the form <appname>:<app directory>"},
          {config,99,"config",{string,[]},"The path to a config file"},
          {overlay_vars,undefined,"overlay_vars",string,
              "Path to a file of overlay variables"},
          {vm_args,undefined,"vm_args",string,
              "Path to a file to use for vm.args"},
          {sys_config,undefined,"sys_config",string,
              "Path to a file to use for sys.config"},
          {system_libs,undefined,"system_libs",string,
              "Path to dir of Erlang system libs"},
          {version,undefined,"version",undefined,"Print relx version"},
          {root_dir,114,"root",string,"The project root directory"}],
         [default],
         default},
     {provider,state,rebar_prv_state,
         {[],[]},
         false,[],"Display rebar configuration for debugging purpose",
         "Print current configuration state","rebar3 state",[],
         [default],
         default},
     {provider,shell,rebar_prv_shell,
         {[],[]},
         true,
         [compile],
         "Start a shell with project and deps preloaded similar to~n'erl -pa ebin -pa deps/*/ebin'.~n",
         "Run shell with project apps and deps in path.","rebar3 shell",
         [{config,undefined,"config",string,
              "Path to the config file to use. Defaults to {shell, [{config, File}]} and then the relx sys.config file if not specified."},
          {name,undefined,"name",atom,"Gives a long name to the node."},
          {sname,undefined,"sname",atom,"Gives a short name to the node."},
          {setcookie,undefined,"setcookie",atom,
              "Sets the cookie if the node is distributed."},
          {script_file,undefined,"script",string,
              "Path to an escript file to run before starting the project apps. Defaults to rebar.config {shell, [{script_file, File}]} if not specified."},
          {apps,undefined,"apps",string,
              "A list of apps to boot before starting the shell. (E.g. --apps app1,app2,app3) Defaults to rebar.config {shell, [{apps, Apps}]} or relx apps if not specified."}],
         [default],
         default},
     {provider,report,rebar_prv_report,
         {[],[]},
         true,[],
         "Provide a crash report to be sent to the rebar3 issues page.",
         "Provide a crash report to be sent to the rebar3 issues page.",
         "rebar3 report \"<task>\"",
         [{task,undefined,undefined,string,"Task to print details for."}],
         [default],
         default},
     {provider,relup,rebar_prv_relup,
         {[],[]},
         true,
         [release],
         "Create relup of releases.","Create relup of releases.",
         "rebar3 relup",
         [{relname,110,"relname",string,
              "Specify the name for the release that will be generated"},
          {relvsn,118,"relvsn",string,"Specify the version for the release"},
          {goal,103,"goal",string,
              "Specify a target constraint on the system. These are usually the OTP"},
          {upfrom,117,"upfrom",string,
              "Only valid with relup target, specify the release to upgrade from"},
          {output_dir,111,"output-dir",string,
              "The output directory for the release. This is `./` by default."},
          {help,104,"help",undefined,"Print usage"},
          {lib_dir,108,"lib-dir",string,
              "Additional dir that should be searched for OTP Apps"},
          {path,112,"path",string,"Additional dir to add to the code path"},
          {default_libs,undefined,"default-libs",boolean,
              "Whether to use the default system added lib dirs (means you must add them all manually). Default is true"},
          {log_level,86,"verbose",
              {integer,2},
              "Verbosity level, maybe between 0 and 3"},
          {dev_mode,100,"dev-mode",boolean,
              "Symlink the applications and configuration into the release instead of copying"},
          {include_erts,105,"include-erts",string,
              "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
          {override,97,"override",string,
              "Provide an app name and a directory to override in the form <appname>:<app directory>"},
          {config,99,"config",{string,[]},"The path to a config file"},
          {overlay_vars,undefined,"overlay_vars",string,
              "Path to a file of overlay variables"},
          {vm_args,undefined,"vm_args",string,
              "Path to a file to use for vm.args"},
          {sys_config,undefined,"sys_config",string,
              "Path to a file to use for sys.config"},
          {system_libs,undefined,"system_libs",string,
              "Path to dir of Erlang system libs"},
          {version,undefined,"version",undefined,"Print relx version"},
          {root_dir,114,"root",string,"The project root directory"}],
         [default],
         default},
     {provider,release,rebar_prv_release,
         {[],[]},
         true,
         [compile],
         "Build release of project.","Build release of project.",
         "rebar3 release",
         [{relname,110,"relname",string,
              "Specify the name for the release that will be generated"},
          {relvsn,118,"relvsn",string,"Specify the version for the release"},
          {goal,103,"goal",string,
              "Specify a target constraint on the system. These are usually the OTP"},
          {upfrom,117,"upfrom",string,
              "Only valid with relup target, specify the release to upgrade from"},
          {output_dir,111,"output-dir",string,
              "The output directory for the release. This is `./` by default."},
          {help,104,"help",undefined,"Print usage"},
          {lib_dir,108,"lib-dir",string,
              "Additional dir that should be searched for OTP Apps"},
          {path,112,"path",string,"Additional dir to add to the code path"},
          {default_libs,undefined,"default-libs",boolean,
              "Whether to use the default system added lib dirs (means you must add them all manually). Default is true"},
          {log_level,86,"verbose",
              {integer,2},
              "Verbosity level, maybe between 0 and 3"},
          {dev_mode,100,"dev-mode",boolean,
              "Symlink the applications and configuration into the release instead of copying"},
          {include_erts,105,"include-erts",string,
              "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
          {override,97,"override",string,
              "Provide an app name and a directory to override in the form <appname>:<app directory>"},
          {config,99,"config",{string,[]},"The path to a config file"},
          {overlay_vars,undefined,"overlay_vars",string,
              "Path to a file of overlay variables"},
          {vm_args,undefined,"vm_args",string,
              "Path to a file to use for vm.args"},
          {sys_config,undefined,"sys_config",string,
              "Path to a file to use for sys.config"},
          {system_libs,undefined,"system_libs",string,
              "Path to dir of Erlang system libs"},
          {version,undefined,"version",undefined,"Print relx version"},
          {root_dir,114,"root",string,"The project root directory"}],
         [default],
         default},
     {provider,upgrade,rebar_prv_plugins_upgrade,
         {[],[]},
         true,[],"List or upgrade plugins","Upgrade plugins",
         "rebar3 plugins upgrade <plugin>",
         [{plugin,undefined,undefined,string,"Plugin to upgrade"}],
         [default],
         plugins},
     {provider,list,rebar_prv_plugins,
         {[],[]},
         true,[],"List local and global plugins for this project",
         "List local and global plugins for this project",
         "rebar3 plugins list",[],
         [default],
         plugins},
     {provider,path,rebar_prv_path,
         {[],[]},
         true,
         [app_discovery],
         "Print paths to build dirs in current profile.",
         "Print paths to build dirs in current profile.","rebar3 path",
         [{app,undefined,"app",string,
              "Comma seperated list of applications to return paths for."},
          {base,undefined,"base",boolean,
              "Return the `base' path of the current profile."},
          {bin,undefined,"bin",boolean,
              "Return the `bin' path of the current profile."},
          {ebin,undefined,"ebin",boolean,
              "Return all `ebin' paths of the current profile's applications."},
          {lib,undefined,"lib",boolean,
              "Return the `lib' path of the current profile."},
          {priv,undefined,"priv",boolean,
              "Return the `priv' path of the current profile's applications."},
          {separator,115,"separator",string,
              "In case of multiple return paths, the separator character to use to join them."},
          {src,undefined,"src",boolean,
              "Return the `src' path of the current profile's applications."},
          {rel,undefined,"rel",boolean,
              "Return the `rel' path of the current profile."}],
         [default],
         default},
     {provider,pkgs,rebar_prv_packages,
         {[],[]},
         true,[],
         ["List available packages",46,"\n"],
         "List available packages.","rebar3 pkgs",[],
         [default],
         default},
     {provider,new,rebar_prv_new,
         {[],[]},
         true,[],
         [67,114,101,97,116,101,32,114,101,98,97,114,51,32,112,114,111,106,
          101,99,116,32,98,97,115,101,100,32,111,110,32,116,101,109,112,108,
          97,116,101,32,97,110,100,32,118,97,114,115,46,"\n","\n",86,97,108,
          105,100,32,99,111,109,109,97,110,100,32,108,105,110,101,32,111,112,
          116,105,111,110,115,58,"\n",32,32,60,116,101,109,112,108,97,116,101,
          62,32,91,118,97,114,61,102,111,111,44,46,46,46,93,"\n"],
         "Create new project from templates.","rebar3 new <template>",
         [{force,102,"force",undefined,"overwrite existing files"}],
         [default],
         default},
     {provider,lock,rebar_prv_lock,
         {[],[]},
         false,
         [install_deps],
         "Locks dependencies","Locks dependencies.",[],[],
         [default],
         default},
     {provider,upgrade,rebar_prv_local_upgrade,
         {[],[]},
         true,[],[],"Download latest rebar3 escript and extract.",
         "rebar3 unstable upgrade",[],
         [default],
         local},
     {provider,install,rebar_prv_local_install,
         {[],[]},
         true,[],[],
         "Extract libs from rebar3 escript along with a run script.",
         "rebar3 unstable install",[],
         [default],
         local},
     {provider,install_deps,rebar_prv_install_deps,
         {[],[]},
         false,
         [app_discovery],
         [],[],undefined,[],
         [default],
         default},
     {provider,help,rebar_prv_help,
         {[],[]},
         true,[],
         "Display a list of tasks or help for a given task or subtask.",
         "Display a list of tasks or help for a given task or subtask.",
         "rebar3 help <task>",
         [{help_task,undefined,undefined,string,"Task to print help for."}],
         [default],
         default},
     {provider,'get-deps',rebar_prv_get_deps,
         {[],[]},
         true,
         [lock],
         "Fetch project dependencies.","Fetch dependencies.",
         "rebar3 get-deps",[],[],default},
     {provider,eunit,rebar_prv_eunit,
         {[],[]},
         true,
         [lock],
         "Run EUnit Tests.","Run EUnit Tests.","rebar3 eunit",
         [{app,undefined,"app",string,
              "Comma separated list of application test suites to run. Equivalent to `[{application, App}]`."},
          {application,undefined,"application",string,
              "Comma separated list of application test suites to run. Equivalent to `[{application, App}]`."},
          {cover,99,"cover",boolean,"Generate cover data. Defaults to false."},
          {dir,100,"dir",string,
              "Comma separated list of dirs to load tests from. Equivalent to `[{dir, Dir}]`."},
          {file,102,"file",string,
              "Comma separated list of files to load tests from. Equivalent to `[{file, File}]`."},
          {module,109,"module",string,
              "Comma separated list of modules to load tests from. Equivalent to `[{module, Module}]`."},
          {suite,115,"suite",string,
              "Comma separated list of modules to load tests from. Equivalent to `[{module, Module}]`."},
          {verbose,118,"verbose",boolean,"Verbose output. Defaults to false."},
          {name,undefined,"name",atom,"Gives a long name to the node"},
          {sname,undefined,"sname",atom,"Gives a short name to the node"},
          {setcookie,undefined,"setcookie",atom,
              "Sets the cookie if the node is distributed"}],
         [test],
         default},
     {provider,escriptize,rebar_prv_escriptize,
         {[],[]},
         true,
         [compile],
         "Generate an escript executable containing the project's and its dependencies' BEAM files.",
         "Generate escript archive.","rebar3 escriptize",[],
         [default],
         default},
     {provider,edoc,rebar_prv_edoc,
         {[],[]},
         true,
         [compile],
         "Generate documentation using edoc.",
         "Generate documentation using edoc.","rebar3 edoc",[],
         [docs],
         default},
     {provider,do,rebar_prv_do,
         {[],[]},
         true,[],
         "Higher order provider for running multiple tasks in a sequence.",
         "Higher order provider for running multiple tasks in a sequence.",
         "rebar3 do <task1>, <task2>, ...",[],
         [default],
         default},
     {provider,dialyzer,rebar_prv_dialyzer,
         {[],[]},
         true,
         [compile],
         "Run the Dialyzer analyzer on the project.\n\nThis command will build, and keep up-to-date, a suitable PLT and will use it to carry out success typing analysis on the current project.\n\nThe following (optional) configurations can be added to a `proplist` of options `dialyzer` in rebar.config:\n`warnings` - a list of dialyzer warnings\n`get_warnings` - display warnings when altering a PLT file (boolean)\n`plt_apps` - the strategy for determining the applications which included in the PLT file, `top_level_deps` to include just the direct dependencies or `all_deps` to include all nested dependencies*\n`plt_extra_apps` - a list of extra applications to include in the PLT file\n`plt_extra_mods` - a list of extra modules to includes in the PLT file\n`plt_location` - the location of the PLT file, `local` to store in the profile's base directory (default) or a custom directory.\n`plt_prefix` - the prefix to the PLT file, defaults to \"rebar3\"**\n`base_plt_apps` - a list of applications to include in the base PLT file***\n`base_plt_mods` - a list of modules to include in the base PLT file***\n`base_plt_location` - the location of base PLT file, `global` to store in $HOME/.cache/rebar3 (default) or  a custom directory***\n`base_plt_prefix` - the prefix to the base PLT file, defaults to \"rebar3\"** ***\n`exclude_apps` - a list of applications to exclude from PLT files and success typing analysis, `plt_extra_mods` and `base_plt_mods` can add modules from excluded applications\n`exclude_mods` - a list of modules to exclude from PLT files and success typing analysis\n\nFor example, to warn on unmatched returns: \n{dialyzer, [{warnings, [unmatched_returns]}]}.\n\n*The direct dependent applications are listed in `applications` and `included_applications` of their .app files.\n**PLT files are named \"<prefix>_<otp_release>_plt\".\n***The base PLT is a PLT containing the core applications often required for a project's PLT. One base PLT is created per OTP version and stored in `base_plt_location`. A base PLT is used to build project PLTs.\n",
         "Run the Dialyzer analyzer on the project.","rebar3 dialyzer",
         [{update_plt,117,"update-plt",boolean,
              "Enable updating the PLT. Default: true"},
          {succ_typings,115,"succ-typings",boolean,
              "Enable success typing analysis. Default: true"}],
         [default],
         default},
     {provider,tree,rebar_prv_deps_tree,
         {[],[]},
         true,
         [lock],
         [],"Print dependency tree.","rebar3 tree",
         [{verbose,118,"verbose",undefined,
              "Print repo and branch/tag/ref for git and hg deps"}],
         [default],
         default},
     {provider,deps,rebar_prv_deps,
         {[],[]},
         true,
         [app_discovery],
         "List dependencies. Those not matching lock files are followed by an asterisk (*).",
         "List dependencies","rebar3 deps",[],
         [default],
         default},
     {provider,cover,rebar_prv_cover,
         {[],[]},
         true,
         [lock],
         "Perform coverage analysis.","Perform coverage analysis.",
         "rebar3 cover",
         [{reset,114,"reset",boolean,"Reset all coverdata."},
          {verbose,118,"verbose",boolean,"Print coverage analysis."}],
         [test],
         default},
     {provider,compile,rebar_prv_compile,
         {[],[]},
         true,
         [lock],
         "Compile apps .app.src and .erl files.",
         "Compile apps .app.src and .erl files.","rebar3 compile",[],
         [default],
         default},
     {provider,ct,rebar_prv_common_test,
         {[],[]},
         true,
         [lock],
         "Run Common Tests.","Run Common Tests.","rebar3 ct",
         [{dir,undefined,"dir",string,
              "List of additional directories containing test suites"},
          {suite,undefined,"suite",string,"List of test suites to run"},
          {group,undefined,"group",string,"List of test groups to run"},
          {testcase,undefined,"case",string,"List of test cases to run"},
          {label,undefined,"label",string,"Test label"},
          {config,undefined,"config",string,"List of config files"},
          {spec,undefined,"spec",string,"List of test specifications"},
          {join_specs,undefined,"join_specs",boolean,
              "Merge all test specifications and perform a single test run"},
          {allow_user_terms,undefined,"allow_user_terms",boolean,
              "Allow user defined config values in config files"},
          {logdir,undefined,"logdir",string,"Log folder"},
          {logopts,undefined,"logopts",string,
              "Options for common test logging"},
          {verbosity,undefined,"verbosity",integer,"Verbosity"},
          {cover,99,"cover",{boolean,false},"Generate cover data"},
          {repeat,undefined,"repeat",integer,"How often to repeat tests"},
          {duration,undefined,"duration",string,
              "Max runtime (format: HHMMSS)"},
          {until,undefined,"until",string,"Run until (format: HHMMSS)"},
          {force_stop,undefined,"force_stop",string,
              "Force stop on test timeout (true | false | skip_rest)"},
          {basic_html,undefined,"basic_html",boolean,"Show basic HTML"},
          {stylesheet,undefined,"stylesheet",string,
              "CSS stylesheet to apply to html output"},
          {decrypt_key,undefined,"decrypt_key",string,
              "Path to key for decrypting config"},
          {decrypt_file,undefined,"decrypt_file",string,
              "Path to file containing key for decrypting config"},
          {abort_if_missing_suites,undefined,"abort_if_missing_suites",
              {boolean,true},
              "Abort if suites are missing"},
          {multiply_timetraps,undefined,"multiply_timetraps",integer,[]},
          {scale_timetraps,undefined,"scale_timetraps",boolean,
              "Scale timetraps"},
          {create_priv_dir,undefined,"create_priv_dir",string,
              "Create priv dir (auto_per_run | auto_per_tc | manual_per_tc)"},
          {include,undefined,"include",string,
              "Directories containing additional include files"},
          {readable,undefined,"readable",boolean,
              "Shows test case names and only displays logs to shell on failures"},
          {verbose,118,"verbose",boolean,"Verbose output"},
          {name,undefined,"name",atom,"Gives a long name to the node"},
          {sname,undefined,"sname",atom,"Gives a short name to the node"},
          {setcookie,undefined,"setcookie",atom,
              "Sets the cookie if the node is distributed"},
          {sys_config,undefined,"sys_config",string,
              "List of application config files"}],
         [test],
         default},
     {provider,clean,rebar_prv_clean,
         {[],[]},
         true,
         [app_discovery],
         "Remove compiled beam files from apps.",
         "Remove compiled beam files from apps.","rebar3 clean",
         [{all,97,"all",undefined,"Clean all apps include deps"},
          {profile,112,"profile",string,
              "Clean under profile. Equivalent to `rebar3 as <profile> clean`"}],
         [default],
         default},
     {provider,compile,rebar_prv_bare_compile,
         {[],[]},
         false,
         [{default,app_discovery}],
         [],[],[],
         [{paths,112,"paths",string,
              "Wildcard path of ebin directories to add to code path"}],
         [default],
         bare},
     {provider,as,rebar_prv_as,
         {[],[]},
         true,[],
         "Higher order provider for running multiple tasks in a sequence as a certain profiles.",
         "Higher order provider for running multiple tasks in a sequence as a certain profiles.",
         "rebar3 as <profile1>,<profile2>,... <task1>, <task2>, ...",
         [{profile,undefined,undefined,string,"Profiles to run as."}],
         [default],
         default},
     {provider,app_discovery,rebar_prv_app_discovery,
         {[],[]},
         false,[],[],[],[],[],
         [default],
         default}],
    false}