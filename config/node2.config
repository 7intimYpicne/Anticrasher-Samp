[
    {partisan, [
        {name, 'node2@127.0.0.1'},
        {peer_port, 56782},
        {remote_ref_as_uri, true},
        {tls, true},
        {tls_server_options, [
            {certfile, "config/_ssl/server/keycert.pem"},
            {cacertfile, "config/_ssl/server/cacerts.pem"},
            {keyfile, "config/_ssl/server/key.pem"},
            {verify, verify_none}
        ]},
        {tls_client_options, [
            {certfile, "config/_ssl/client/keycert.pem"},
            {cacertfile, "config/_ssl/client/cacerts.pem"},
            {keyfile, "config/_ssl/client/key.pem"},
            {verify, verify_none}
        ]},
        {peer_discovery, #{
            enabled => true,
            type => partisan_peer_discovery_list,
            initial_delay => 5000,
            polling_interval => 30000,
            timeout => 5000,
            config => #{
                addresses => [{'node1@127.0.0.1', 56780}]
            }
        }}
    ]},
    {kernel, [
        {logger_level, info},
        {logger, [
            {handler, default, logger_std_h, #{
                formatter => {logger_formatter, #{
                    legacy_header => false,
                    single_line => true,
                    %% term_depth => 50,
                    %% time_designator => "T",
                    %% time_offset => 0,
                    template => [
                        "=== when=", time,
                        " level=", level,
                        {pid,[" pid=",pid],[]},
                        " at=", mfa, ":", line, " ",
                        msg,"\n"
                    ]
                }},
                filter_default => stop,
                filters => [
                    {remote_gl,
                        {fun logger_filters:remote_gl/2, stop}
                    },
                    {no_domain,
                        {fun logger_filters:domain/2,{log,undefined,[]}}
                    },
                    {domain,
                        {fun logger_filters:domain/2, {stop, equal, [sasl]}}
                    },
                    {domain,
                        {fun logger_filters:domain/2, {log, super, [otp]}}
                    }
                ]
            }}
        ]}
    ]}
].